networks:
  loki:

services:
  ml_host_backend_dev:
    build:
      context: ./services/ml_host_backend
      dockerfile: Dockerfile
      target: dev
    container_name: ml_host_backend_dev
    depends_on:
      - ml_train_hub_dev
    env_file:
      - ./.envs/.ml_host_backend
      - ./.envs/.env
    ports:
    - "8000:8000"

  ml_train_hub_dev:
    container_name: ml_train_hub_dev
    image: ml_train_hub:dev #  ðŸ‘ˆ This sets the name and tag
    build:
      context: ./services/ml_train_hub
      dockerfile: Dockerfile
      target: dev
    volumes:
      - ./services/ml_train_hub/mlruns:/home/services/ml_train_hub/mlruns
      - ./services/ml_train_hub/file_exchange:/home/services/ml_train_hub/file_exchange # adapt the local folder for the prod server, how files shall be exchanged
    ports:
    - "8001-8002:8001-8002" # MLflow server (dev=8001) and FastAPI server (dev=8002)

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./data/prometheus-data:/prometheus # persist time-series metrics data and configurations
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki-config.yml
    volumes:
      - ./data/loki-data:/loki # persist ingested logs
      - ./loki-config.yml:/etc/loki/loki-config.yml
    networks:
      - loki

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log        # Adjust if needed
      - ./promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - loki

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true # removes login
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin # grants admin role to anonymous access
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./data/grafana-data:/var/lib/grafana # persist dashboards, users and settings
    networks:
      - loki

volumes:
  grafana-data:
    driver: local
  prometheus-data:
    driver: local
  loki-data:
    driver: local
